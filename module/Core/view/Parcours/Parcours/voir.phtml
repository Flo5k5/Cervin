<?php
$title = $Parcours->titre;
$this->headTitle($title);

$this->headLink()->prependStylesheet($this->basePath() . '/css/bootstrap-editable.css');
?>

<div class="page-header">
    <?php if ($this->isAllowed('Parcours') === true) :?>
    <h1>
    <i class="icon-road"></i> 
    <span class="edit CursorPointer"
                        data-url="<?php echo $this->url("parcours/modifier", array("id" => $Parcours->id)); ?>"
                        data-name="titre" 
                        data-type="text" 
                        data-inputclass="span10" 
                        data-pk="1"><?php echo $this->escapeHtml($title); ?></span>
    <small> <a href="#helpModal" data-toggle="modal"><i class="icon-info-sign"> </i></a></small> 
    </h1>
    <p class="edit CursorPointer"
                        data-url="<?php echo $this->url("parcours/modifier", array("id" => $Parcours->id)); ?>"
                        data-inputclass="span10" 
                        data-name="description" 
                        data-type="textarea" 
                        data-pk="1"><?php echo $this->escapeHtml($Parcours->description);?></p>
    <?php else : ?>
        <h1>
        <i class="icon-road"></i><?php echo $this->escapeHtml($title); ?>
    	<small> <a href="#helpModal" data-toggle="modal"><i class="icon-info-sign"> </i></a></small> 
    	</h1>
    <p><?php echo $this->escapeHtml($Parcours->description);?></p>
    <?php endif;?>
</div>

<!-- Help Modal -->
<div id="helpModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="myModalLabel">Aide : Gestion des parcours</h3>
    </div>
    <div class="modal-body">
 Cette page vous permet de gérer la structure d'un parcours ou de voir la structure en fonction de vos droits.     </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true">Retour</button>
    </div>
</div>

<style type="text/css">

	.elements {
		width: 208px;
		text-align: center;
		padding: 20px 10px 20px 10px;
	} 
	
	a [class^="icon-"],a [class*=" icon-"],a [class^="icon-"]:before,a [class*=" icon-"]:before
	{
		display: inline-block;
	}
	
	.sous_parcours {
		border-style: dashed;
		border-width: 3px;
		border-color: #006699;
		padding: 5px 5px 20px 5px;
	}

</style>

<div class="row-fluid">

	<!-- Menu de navigation dans le parcours -->
	<div class="span4 well">
		<h4> Chemin recommandé </h4>
		<?php $sous_parcours = $Parcours->sous_parcours_depart; ?>
		<ul class="nav nav-list">
			<?php while ($sous_parcours != null) : ?>
				<li class="nav-header strong"> <?php echo $sous_parcours->titre; ?> </li>
				<?php 
				$scene_depart = $sous_parcours->scene_depart;
				$transition = $scene_depart->transition_recommandee;
				?>
				<li>
					<a href="#<?php echo $scene_depart->id; ?> ">
					<?php echo $this->escapeHtml($scene_depart->titre); ?> 
					</a>
				</li>
				<?php while ($transition != null && $transition->sous_parcours == $sous_parcours) : ?>
					<li>
						<a href="#<?php echo $transition->scene_destination->id; ?> ">
						<?php echo $this->escapeHtml($transition->scene_destination->titre); ?> 
						</a>
					</li>
					<?php $transition = $transition->scene_destination->transition_recommandee;
			 	endwhile;
				$sous_parcours = $sous_parcours->sous_parcours_suivant;
			endwhile; ?>
		</ul>
	</div>
	
	<!-- Affichage du parcours -->
	<div class="span8">
		<?php $sous_parcours = $Parcours->sous_parcours_depart; ?>
		<!-- On affiche les sous-parcours un à un -->
		<?php while ($sous_parcours != null) : ?>
			<div class="row-fluid">
				
				<div class="span6 elements sous_parcours">
			    	<!-- Titre du sous-parcours -->
			    	<?php echo $this->TitreSousParcoursWidget($sous_parcours); ?>
					<hr/>
					
					<!-- Première scène du sous parcours  -->
					<?php 
					$scene_depart = $sous_parcours->scene_depart;?>
					<?php echo $this->BoutonSceneWidget($scene_depart);?>
					<?php echo $this->TransitionsSecondairesWidget($scene_depart); ?>
					<br>
					<!-- Transitions secondaires depuis cette scène -->
					<?php //echo $this->TransitionsSecondairesWidget($scene_depart); ?>
				
				   	<?php  $transition = $scene_depart->transition_recommandee;
				    while ($transition != null && $transition->sous_parcours == $sous_parcours) : ?>
				    	<!-- Tant qu'on est toujours dans le sous parcours -->
				    	<!--  On affiche la transition -->
				        <?php echo $this->TransitionWidget($transition); ?>
				        <!-- On affiche la scène suivante -->
				        <?php echo $this->BoutonSceneWidget($transition->scene_destination); 
				        echo $this->TransitionsSecondairesWidget($transition->scene_destination); ?>
				        
				        <br>
						<!-- Transitions secondaires depuis cette scène -->
						<?php //echo $this->TransitionsSecondairesWidget($scene_depart); ?>
						<!-- On avance dans le sous-parcours -->
						<?php $transition = $transition->scene_destination->transition_recommandee;
			    	endwhile; ?>
		    	</div>

		    </div>
		    
	    	<!-- On est arrivé à la fin du sous-parcours -->
	    	<?php if ($transition) : ?>
				<!-- Il y a un sous-parcours suivant -->
				<!-- et on affiche la transition inter-sous-parcours -->
				<div class="row-fluid">
					<div class='span6 elements'>
						<?php echo $this->TransitionWidget($transition); ?>
					</div>
				</div>
			<?php endif; ?>
			
			<!-- On passe au sous-parcours suivant -->
			<?php $sous_parcours = $sous_parcours->sous_parcours_suivant;
		endwhile ; ?>
		
	</div> <!-- /span8 -->
	
</div> <!-- /row-fluid -->


<div id="confirmDiv"></div>
<div id="modalDiv"></div>


<?php
$this->headScript()->appendFile($this->basePath() . '/js/bootstrap-editable.js');
$this->headScript()->appendFile($this->basePath() . '/js/bootstrap-confirm.js');

$this->inlineScript()->captureStart();
?>
    $(function() {
        // on active editable
        $(".edit").editable({ mode: 'inline', emptytext: 'Vide'});
        
        /*$(".btnTransitionsSecondaires").click(function () {
        	$(this).parent().parent().find('div.transitionsSecondaires').html('COUCOU');
        });*/
        
        // afficher les popover et activer les champs editable
        $('.popover-link').click(function () {
            var t = $(this)
            $(this).popover('show');
            $(".edit2").editable({emptytext: 'Vide'}).on('save', function(e, params) {
                t.text(params.newValue);
            });
        });
        
        $(".popover-secondaires").click(function () {
        	 $(this).popover('show');
        }); 
        
        // fermer les popover ouverte si on en ouvre une autre
        $('body').on('click', function (e) {
            $('.popover-link').each(function () {
                //the 'is' for buttons that triggers popups
                //the 'has' for icons within a button that triggers a popup
                if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
                    $(this).popover('hide');
                }
            });
        }); 
        <?php if ($this->isAllowed('Parcours') === true) :?>

        // on affiche le modal avec les semantiques
        $(".elements").on("click",".selectSemantiques", function(e){
            var dataURL = $(this).attr('data-url');
            var dataValue = $(this).attr('data-value');

            var body = new String('<form id="semantiqueTransitions" action="'+dataURL+'"><dl><?php foreach ($SemantiqueTransitions as $semantique) { ?><label class="radio"><dt><input type="radio" name="SemantiqueTransitions" id="SemantiqueTransitions<?php echo $this->escapeHtml($semantique->id) ;?>" value="<?php echo $this->escapeHtml($semantique->id) ;?>" ><?php echo $this->escapeHtml($semantique->semantique) ;?></dt><dd><?php echo $this->escapeHtml($semantique->description) ;?></dd></label><?php } ?></dl></form>');

            body = body.replace('id="SemantiqueTransitions'+dataValue+'"', 'id="SemantiqueTransitions'+dataValue+'" checked="checked"' );

            $('#confirmDiv').confirmModal({
                heading:"Sélectionner le type de Semantique",
                body:body,
                callback: function() {
                    var $form = $('#semantiqueTransitions');
                    var inputVal = $form.find( 'input[name="SemantiqueTransitions"]:checked' ).val();
                    var URL = $form.attr( 'action' );

                     $.post(
                        dataURL,
                        { name: "semantique",value:inputVal },
                        function() {

                          //  document.location.reload();
                        }
                    );
                }
            });
            $('#SemantiqueTransitions'+dataValue).prop('checked');
        });

        // modal de confirmation : suppression de scene
        $(".elements").on("click",".SupprimerScene", function(e){
            var dataURL = $(this).attr('data-url');
            var dataValue = $(this).attr('data-value');
            $('#confirmDiv').confirmModal({
                heading:"Confirmation : suppression d'une scène",
                body:"Êtes-vous sûr de vouloir supprimer définitivement la scène <i>" + dataValue + " </i>?",
                callback: function() {
                     $.post(
                        dataURL,
                        { name: "supprimer" },
                        function() {
                            document.location.reload();
                        }
                    );
                }
            });
        });
        <?php endif;?>
    });

<?php $this->inlineScript()->captureEnd(); ?>
